/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy-gradle-plugin'
    id 'maven-publish'
    id 'pl.allegro.tech.build.axion-release' version '1.17.0'
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '2.1.0'
}

group = 'org.devnuxs'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    toolchain{
        languageVersion = JavaLanguageVersion.of(17)
        vendor = JvmVendorSpec.ADOPTIUM
    }
}

repositories {
    gradlePluginPortal()
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation "com.diffplug.spotless:spotless-plugin-gradle:${spotlessPluginVersion}"
    implementation "io.quarkus:io.quarkus.gradle.plugin:${quarkusPlatformVersion}"
    implementation "org.openapitools:openapi-generator-gradle-plugin:${openApiGeneratorVersion}"
    implementation "pl.allegro.tech.build:axion-release-plugin:${axionReleaseVersion}"
    implementation "se.bjurr.gitchangelog:git-changelog-gradle-plugin:${gitChangelogVersion}"
}


publishing {
    // other settings of publication
    repositories {
        maven {
            name = "Gitea"
            url = uri("https://git.drmaniac.de/api/packages/repository/maven")

            credentials(HttpHeaderCredentials) {
                name = "Authorization"
                value = "token " + System.getenv('accessToken')
            }

            authentication {
                header(HttpHeaderAuthentication)
            }
        }
        maven {
            name = "GitHub"
            url = uri("https://maven.pkg.github.com/devnuxs-org/gradle-plugins")
            credentials {
                username = System.getenv('GITTEA_GITHUB_ACTOR')
                password = System.getenv('GITTEA_GITHUB_TOKEN')
            }
        }
    }
}

scmVersion {
    tag {
        prefix.set("v")
        versionSeparator = ""
    }
    nextVersion {
        suffix = "NEXT"
    }
}

version = scmVersion.version

task changeLog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    templateContent = new File('./changelog.mustache').getText('UTF-8');
    ignoreCommitsWithoutIssue = false;
    removeIssueFromMessage = false;
}
